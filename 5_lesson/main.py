# 1. Создать программно файл в текстовом формате, записать в него построчно данные, вводимые пользователем.
# Об окончании ввода данных свидетельствует пустая строка.

'''
# единственный момент, не знаю как правильно уйти от добавления в конце \n либо в начале
new_file = open('test.txt', 'w')
while True:
    line = input('Введите текст: ')
    if line == '':
        break
    else:
        new_file.writelines(line + '\n')
new_file.close()

new_file = open('test.txt', 'r')
content = new_file.readlines()
print(content)
new_file.close()
'''

# 2. Создать текстовый файл (не программно), сохранить в нем несколько строк,
# выполнить подсчет количества строк, количества слов в каждой строке.

'''
# уже запутался и не успевал, хотел вывести "Слов в строке 1: 2, Слов в строке 2: 3...
my_file = open('test2.txt', 'r')
content = my_file.readlines()
print(f'Кол-во строк - {len(content)}')
for i in content:
    print(f'Слов в строке : {len(i.split(" "))}')
my_file.close()
'''

# 3. Создать текстовый файл (не программно), построчно записать фамилии сотрудников и величину их окладов.
# Определить, кто из сотрудников имеет оклад менее 20 тыс., вывести фамилии этих сотрудников.
# Выполнить подсчет средней величины дохода сотрудников.

'''
my_file = open('test3.txt', 'r', encoding='utf-8')
content = my_file.read().split('\n')
oklad = []
fio = []
for i in content:
    i = i.split()
    if int(i[1]) < 20000:
        fio.append(i[0])
    oklad.append(i[1])
print(f'Сотрудники с окладом меньше 20 тыс {fio}')
print(f'Средняя величина дохода {sum(map(int, oklad)) / len(oklad)}')
'''

# 4. Создать (не программно) текстовый файл со следующим содержимым:
# One — 1
# Two — 2
# Three — 3
# Four — 4
# Необходимо написать программу, открывающую файл на чтение и считывающую построчно данные.
# При этом английские числительные должны заменяться на русские.
# Новый блок строк должен записываться в новый текстовый файл.

'''
# данную задачу помог решить друг, сам бы никак(
translate = {'One' : 'Один', 'Two' : 'Два', 'Three' : 'Три', 'Four' : 'Четыре'}
new_file = []
with open('test4.txt', 'r', encoding='utf-8') as test4:
    for i in test4:
        i = i.split(' ', 1)
        new_file.append(translate[i[0]] + '  ' + i[1])
    print(new_file)

with open('test4a.txt', 'w', encoding='utf-8') as test4a:
    test4a.writelines(new_file)
'''

# 5. Создать (программно) текстовый файл, записать в него программно набор чисел, разделенных пробелами.
# Программа должна подсчитывать сумму чисел в файле и выводить ее на экран.

'''
test5 = open('test5.txt', 'w+')
counts = input('Введите цифры через пробел ')
test5.writelines(counts)
my_numb = counts.split()
print(sum(map(int, my_numb)))
'''


# 6. Необходимо создать (не программно) текстовый файл, где каждая строка описывает учебный предмет и
# наличие лекционных, практических и лабораторных занятий по этому предмету и их количество.
# Важно, чтобы для каждого предмета не обязательно были все типы занятий.
# Сформировать словарь, содержащий название предмета и общее количество занятий по нему. Вывести словарь на экран.
# Примеры строк файла:
# Информатика: 100(л) 50(пр) 20(лаб).
# Физика: 30(л) — 10(лаб)
# Физкультура: — 30(пр) —
# Пример словаря:
# {“Информатика”: 170, “Физика”: 40, “Физкультура”: 30}





# 7. Создать (не программно) текстовый файл, в котором каждая строка должна содержать данные о фирме:
# название, форма собственности, выручка, издержки.
# Пример строки файла: firm_1 ООО 10000 5000.
# Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также среднюю прибыль.
# Если фирма получила убытки, в расчет средней прибыли ее не включать.
# Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями, а также словарь со средней прибылью.
# Если фирма получила убытки, также добавить ее в словарь (со значением убытков).
# Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}].
# Итоговый список сохранить в виде json-объекта в соответствующий файл.
# Пример json-объекта:
# [{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]
# Подсказка: использовать менеджеры контекста.


